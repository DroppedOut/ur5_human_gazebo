<launch>

  <!-- By default, we do not start a database (it can be large) -->
  <arg name="db" default="false" />

  <!-- By default, we are not in debug mode -->
  <arg name="debug" default="false" />

  <!--
  By default, hide joint_state_publisher's GUI

  MoveIt!'s "demo" mode replaces the real robot driver with the joint_state_publisher.
  The latter one maintains and publishes the current joint configuration of the simulated robot.
  It also provides a GUI to move the simulated robot around "manually".
  This corresponds to moving around the real robot without the use of MoveIt.
  -->
  <arg name="use_gui" default="false" />

  <!-- Gazebo specific options -->
  <arg name="gazebo_gui" default="true"/>
  <arg name="paused" default="false"/>

  <!-- launch the gazebo simulator and spawn the robot -->
  <include file="$(find human_moveit_config)/launch/gazebo.launch" >
    <arg name="paused" value="$(arg paused)"/>
    <arg name="gazebo_gui" value="$(arg gazebo_gui)"/>
  </include>
  <!-- By default, use the urdf location provided from the package -->
  <arg name="urdf_path" default="$(find ur5_notebook)/urdf/human_model/humanSubject04_48dof.urdf"/>
  <rosparam command="load" file="$(find human_moveit_config)/config/joint_names.yaml"/>
 <!-- send robot urdf to param server -->
  <param name="robot_description" textfile="$(arg urdf_path)" />
<group ns="human_robot">


  <!-- push robot_description to factory and spawn robot in gazebo at the origin, change x,y,z arguments to spawn in a different position -->
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model robot -x 0 -y 0 -z 0"
    respawn="false" output="screen" />

  <include file="$(find human_moveit_config)/launch/ros_controllers.launch"/>

  <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
  <include file="$(find human_moveit_config)/launch/planning_context.launch">
    <arg name="load_robot_description" value="true"/>
  </include>

  <!-- If needed, broadcast static tf for robot root -->
  

  <!-- We do not have a robot connected, so publish fake joint states -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="use_gui" value="false"/>
    <rosparam param="source_list">[human/joint_states]</rosparam>
  </node>

  <!-- Given the published joint states, publish tf for the robot links -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

  <!-- Run the main MoveIt! executable without trajectory execution (we do not have controllers configured by default) -->
  <include file="$(find human_moveit_config)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="true"/>
    <arg name="fake_execution" value="false"/>
    <arg name="info" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>  

  <!-- Run Rviz and load the default config to see the state of the move_group node -->
  <include file="$(find human_moveit_config)/launch/moveit_rviz.launch">
    <arg name="rviz_config" value="$(find human_moveit_config)/launch/moveit.rviz"/>
    <arg name="debug" value="false"/>
  </include>
 </group>

</launch>
